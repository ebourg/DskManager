10 ON BREAK GOSUB 6030
20 GOSUB 6120:REM MEMORY 39999:LOAD "!hr demo"
30 REM AMSTRAD LOGO
40 DEG
50 DIM cx(5),cy(5),r(5),lc(5),np(5),px%(5,81),py%(5,81)
60 cx(1)=320:cy(1)=140 
70 r(1)=75:r(2)=40:r(3)=20:r(4)=10:r(5)=5
80 FOR st=1 TO 5
90  lc(st)=0:np(st)=0
100  np(st)=np(st)+1 
110  px%(st,np(st))=r(st)*SIN(lc(st))
120  py%(st,np(st))=r(st)*COS(lc(st)) 
130  lc(st)=lc(st)+360/r(st) 
140  IF lc(st) < 360 THEN 100
150  px%(st,np(st)+1)=px%(st,1):py%(st,np(st)+1)=py%(st,1)
160  NEXT st
170 ORIGIN 0,0,0,640,0,400:MODE 1
180 son$=CHR$(23)+CHR$(3):soff$=CHR$(23)+CHR$(2)
190 BORDER 1:INK 0,1:INK 1,17:INK 2,24:INK 3,24
200 GOSUB 1070:REM sunrise
210 ORIGIN 0,226
220 PRINT CHR$(23);CHR$(0);
230 AFTER 5 GOSUB 610 
240 RESTORE 690
250 READ a,b,c,d:GOTO 280
260 READ e,f:IF e=999 THEN e=REMAIN(0):GOTO 360
270 IF e<0 THEN a=c:b=d:c=-e:d=-f:ELSE READ c,d:a=e:b=f
280 xd=c-a:yd=d-b
290 dist=SQR(xd*xd+yd*yd):numsteps=MAX(dist\8,1)
300 x=a:y=b:MOVE x,y
310 xstep=xd/numsteps:ystep=yd/numsteps
320 FOR stepnum=1 TO numsteps
330 DI:x=x+xstep:y=y+ystep:DRAW x,y,1:EI
340 NEXT stepnum
350 GOTO 260
360 LOCATE 1,16:PEN 3:INK 3,15:PRINT " W E L C O M E S   Y O U   T O  T H E"
370 ORIGIN 240,60:RESTORE 910
380 READ A,B,C,D:IF a=999 THEN GOTO 410 
390 MOVE a,b:DRAW c,d,3
400 GOTO 380
410 GOSUB 1250
420 LOCATE 1,25:ORIGIN 0,0,0,640,0,400
430 FOR a=1 TO 12
440  FOR b%=0 TO 320 STEP 2
450   IF TEST(b%,398)<>0 THEN 470
460  NEXT
470 FOR c%=640 TO 320 STEP -2
480  IF TEST(c%,398)<>0 THEN 500
490 NEXT
500 'IF b%<c% THEN d%=b%:e%=c%
510 CALL &BD19:PRINT
520 MOVE b%,398:DRAW c%,398,1
530 NEXT
540 LOCATE 1,12
550 FOR a=b% TO c% STEP (c%-b%)/50
560  CALL &BD19
570  MOVE 0,398:DRAW a,398,0
580 NEXT
590 MODE 0:LOCATE 5,12:INK 1,19:PRINT "AN EXAMPLE OF":LOCATE 8,14:PRINT"GRAPHICS":t=TIME
600 IF TIME-t<900 THEN 600 ELSE 1330
610 REM draw and undraw searchlight
620 t=ATN((x-320)/(y+248))
630 xst=320+55*SIN(t):yst=55*COS(t)-248
640 PRINT son$;:MOVE xst,yst:DRAW x,y,2
650 PRINT soff$;:MOVE xst,yst:DRAW x,y,1
660 PRINT CHR$(23);CHR$(0);
670 AFTER 10 GOSUB 610
680 RETURN
690 REM 'a' starts here
700 DATA 6,0,28,172,-72,-172,-92,0,-64,0,-58,-28,-40,-28,-34,0,-6,-0
710 DATA 42,50,49,130,-56,-50,-42,-50
720 'm starts here
730 DATA 102,0,102,172,-134,-172,-156,-80,-178,-172,-210,-172,-210,0,-178,0,-178,-80,-164,0,-148,0,-134,-81,-134,0,-102,0
740 's starts here
750 DATA 220,58,248,58,-248,-32,-252,-28,-256,-28,-260,-32,-260,-60,-260,-62,-224,-98,-220,-104,-220,-160,222,162,222,164,224,166,226,168,228,170,230,170,-232,-172,-280,-172,-282,-170,284,170,286,168,288,166,288,164,-290,-162
760 DATA -290,-112,-260,-112,-260,-138,-256,-142,-252,-142,-248,-138,-248,-110,-290,-68,-290,-12,288,10,288,8,286,6,284,4,282,2,280,2,-278,-0,-232,-0,230,2,228,2,226,4,224,6,222,8,222,10,-220,-12
770 DATA -220,-58
780 't starts here
790 DATA 314,0,314,142,-300,-142,-300,-172,-356,-172,-356,-142,-342,-142,-342,0,-314,0
800 'r starts here
810 DATA 366,0,366,172,-426,-172,428,170,430,170,432,168,434,166,436,164,436,162,438,160,438,98,436,96,436,94,434,92,432,90,430,88,428,88
820 DATA -426,-86,-424,-86,428,84,430,84,432,82,434,80,436,78,436,76,-438,-74,-438,0,-410,0,-410,-70,-406,-74,-394,-74,-394,0,-366,0 
830 DATA 394,97,394,142,-405,-142,-409,-139,-409,-101,-405,-97,-394,-97
840 'a again
850 DATA 446,0,468,172,-512,-172,-532,0,-504,0,-498,-28,-480,-28,-474,0,-446,0
860 DATA 482,50,490,130,-497,-50,-482,-50
870 'd starts here
880 DATA 542,0,542,172,-602,-172,604,170,606,170,608,168,610,166,612,164,612,162,614,160,614,12,612,10,612,8,610,6,608,4,606,2,604,2,602,0,542,0
890 DATA 572,30,572,142,-580,-142,-584,-138,-584,-34,-580,-30,-572,-30
900 DATA 999,0
910 REM cpc464 starts here
920 DATA 20,34,20,40,20,40,2,40
930 DATA 0,38,0,2,2,0,20,0,20,0,20,6
940 DATA 24,40,46,40,48,38,48,22
950 DATA 46,20,28,20,28,40,28,0
960 DATA 24,0,32,0
970 DATA 72,34,72,40,72,40,54,40 
980 DATA 52,38,52,2,54,0,72,0,72,0,72,6 
990 DATA 106,10,82,10,82,12,100,40
1000 DATA 102,40,102,0
1010 DATA 130,34,130,38,128,40,112,40
1020 DATA 110,38,110,2,112,0,128,0
1030 DATA 130,2,130,18,128,20,112,20
1040 DATA 158,10,134,10,134,12,152,40  
1050 DATA 154,40,154,0
1060 DATA 999,0,0,0
1070 CLG
1080 DIM s(9),c(9)
1090 a=1:DEG
1100 FOR b=-80 TO 80 STEP 20
1110  s(a)=SIN(b):c(a)=COS(b):a=a+1
1120 NEXT
1130 ORIGIN 320,0
1140 FOR b=-50 TO -20 STEP 2
1150 'MOVE 0,b+50
1160 FOR a=1 TO 9  
1170  DRAW 50*S(a),b+50*C(a),2
1180  NEXT
1190 NEXT
1200 FOR a=-70 TO 70 STEP 5
1210  b=50*SIN(a):c=50*COS(a)-20
1220  DRAW b,c,2:DRAW b+SGN(b)*RND*5,c+RND*5,2
1230 NEXT
1240 RETURN
1250 ORIGIN 320,0:MOVE -50,0
1260 FOR b=-20 TO -60 STEP -2
1270  FOR a=1 TO 9
1280  DRAW 60*s(a),b+60*c(a),0
1290  NEXT
1300 NEXT
1310 ORIGIN 0,0,0,640,0,200: CLG 0
1320 RETURN
1330 MODE 1:INK 0,0:BORDER 0:INK 1,24:INK 2,6:INK 3,2
1340 i=1:RAD
1350 ORIGIN 320,200
1360 FOR a = 0 TO 4*PI STEP PI/60
1370 MOVE 320*SIN(a/2),198*COS(a)
1380 DRAW 200*COS(a/2),198*SIN(a),i
1390 i=i+1:IF i=4 THEN i=1
1400 NEXT
1410 EVERY 5 GOSUB 1450
1420 T=TIME
1430 IF TIME-T<2100 THEN 1430
1440 R=REMAIN(0):GOTO 1480
1450 IF i=1 THEN INK 1,24:INK 2,6:INK 3,2:i=2:RETURN
1460 IF I=2 THEN INK 1,6:INK 2,2:INK 3,24:I=3:RETURN
1470 IF I=3 THEN INK 1,2:INK 2,24:INK 3,6:I=1:RETURN
1480 MODE 0:INK 0,0:INK 1,2:INK 2,6:INK 3,18:BORDER 0  
1490 REM this program draws patterns
1500 DEG
1510 sa=120
1520 BORDER 26:INK 0,26:INK 1,0:PEN 1:LOCATE 5,12:PRINT "AN EXAMPLE OF":LOCATE 8,14:PRINT "COLOURS"
1530 PEN 1
1540 st=1
1550 t=TIME
1560 IF TIME-t<900 THEN 1560
1570 INK 0,13:INK 1,2:BORDER 13:MODE 1
1580 st=1
1590 GOSUB 1670
1600 LOCATE 1,1
1610 EVERY 25,1 GOSUB 1840
1620 EVERY 15,2 GOSUB 1880
1630 EVERY 5,3 GOSUB 1920
1640 f=0
1650 AFTER 500 GOSUB 1960
1660 IF f=0 THEN 1660 ELSE 1990
1670 REM draw circle plus 3,4 or 6 around it
1680 cx%=cx(st):cy%=cy(st):lc(st)=0
1690 FOR x%=1 TO np(st)
1700  MOVE cx%,cy%
1710  DRAWR px%(st,x%),py%(st,x%),1+(st MOD 3)
1720  DRAW cx%+px%(st,x%+1),cy%+py%(st,x%+1)
1730 NEXT x%
1740 IF st=5 THEN RETURN
1750 lc(st)=0
1760 cx(st+1)=cx(st)+1.75*r(st)*SIN(sa+lc(st))
1770 cy(st+1)=cy(st)+1.75*r(st)*COS(sa+lc(st))
1780  st=st+1
1790  GOSUB 1670
1800  st=st-1
1810  lc(st)=lc(st)+2*sa
1820  IF (lc(st) MOD 360)<>0 THEN 1760
1830  RETURN
1840 ik1=1+RND*25
1850 IF ABS(ik1-ik2)<3 OR ABS(ik1-ik3)<3 THEN 1840
1860 INK 1,ik1
1870 RETURN
1880 ik2=1+RND*25
1890 IF ABS(ik2-ik1)<3 OR ABS(ik2-ik3)<3 THEN 1880
1900 INK 2,ik2
1910 RETURN
1920 ik3=1+RND*25
1930 IF ABS(ik3-ik1)<3 OR ABS(ik3-ik2)<3 THEN 1920
1940 INK 3,ik3
1950 RETURN
1960 r=REMAIN(1)+REMAIN(2)+REMAIN(3)
1970 f=1
1980 RETURN
1990 REM sound demo
2000 BORDER 24:INK 0,24:INK 1,0:MODE 0:LOCATE 5,12:PEN 1:PRINT "AN EXAMPLE OF":LOCATE 9,14:PRINT"SOUND":t=TIME
2010 IF TIME-t<900 THEN 2010
2020 MODE 1:INK 2,2: INK 3,8
2030 ENV 1,2,6,1,1,0,25,12,-1,1
2040 ENT -1,1,1,1,2,-1,1,1,1,1
2050 FOR y=5 TO 9
2060  MOVE 0,400-(y*16)
2070  DRAW 640,400-(y*16),3
2080 NEXT y
2090 FOR y=12 TO 16
2100 MOVE 0,400-(y*16)
2110 DRAW 640,400-(y*16)
2120 NEXT y
2130 FOR x=58 TO 638 STEP 290
2140  MOVE x,400-16*16:DRAW x,400-12*16:MOVE x,400-9*16:DRAW x,400-5*16
2150 NEXT
2160 PRINT CHR$(22);CHR$(1)
2170 GOSUB 2530
2180 db$=CHR$(10)+CHR$(8)
2190 PEN 1:RESTORE 2490:FOR n=1 TO 8
2200 IF n=1 THEN MOVE 74,240:DRAW 100,240
2210  READ note
2220  SOUND 7,note,60,0,1,1
2230 IF (SQ(1) AND 7)=4 THEN 2240 ELSE 2230
2240  IF (n MOD 2)=0 THEN LOCATE 2*n+4,8-n/2:PRINT CHR$(254)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(255)
2250 IF (n MOD 2)=1 THEN  LOCATE 2*n+4,7-n/2:PRINT CHR$(251)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(252)+db$+CHR$(253)
2260 NEXT
2270 PEN 2:RESTORE 2490:FOR n=1 TO 8
2280 IF n=8 THEN MOVE 584,224:DRAW 612,224
2290  READ note
2300  SOUND 7,note*2,60,0,1,1
2310 IF (SQ(1) AND 7)=4 THEN 2320 ELSE 2310
2320 IF (n MOD 2)=1 THEN LOCATE 2*n+22,12-n/2:PRINT USING "&";CHR$(254)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(255)
2330 IF (n MOD 2)=0 THEN LOCATE 2*n+22,12-n/2:PRINT USING "&";CHR$(251)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(252)+db$+CHR$(253) 
2340 NEXT
2350 PEN 1: RESTORE 2490:FOR n=1 TO 8
2360  READ note:IF n=1 THEN MOVE 360,240:DRAW 384,240 
2370  SOUND 7,note,60,0,1,1 
2380 IF (SQ(1) AND 7)=4 THEN 2390 ELSE 2380 
2390  IF (n MOD 2)=0 THEN LOCATE 2*n+22,8-n/2:PRINT USING "&";CHR$(254)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(255)
2400  IF (n MOD 2)=1 THEN LOCATE 2*n+22,7-n/2:PRINT USING "&"; CHR$(251)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(252)+DB$+CHR$(253)  
2410 NEXT
2420 PEN 2:RESTORE 2490:FOR n=1 TO 8
2430  READ note:IF n=8 THEN MOVE 298,224:DRAW 326,224
2440  SOUND 7,note*2,60,0,1,1
2450 IF (SQ(1) AND 7)=4 THEN 2460 ELSE 2450
2460 IF (n MOD 2)=1 THEN LOCATE 2*n+4,12-n/2:PRINT CHR$(254)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(255)
2470 IF (n MOD 2)=0 THEN LOCATE 2*n+4,12-n/2:PRINT CHR$(251)+db$+CHR$(254)+db$+CHR$(254)+db$+CHR$(252)+db$+CHR$(253) 
2480 NEXT
2490 DATA 478,426,379,358,319,284,253,239
2500 PRINT CHR$(22);CHR$(0):t=TIME
2510 IF TIME-t<1200 THEN 2510
2520 GOTO 2910
2530 PEN 1:RESTORE 2720
2540 FOR y=5 TO 10
2550  READ a1,b1,a2,b2,a3,b3,a4,b4,a5,b5,a6,b6,a7,b7,a8,b8
2560 SYMBOL 254,a1,a2,a3,a4,a5,a6,a7,a8
2570 SYMBOL 255,b1,b2,b3,b4,b5,b6,b7,b8
2580 LOCATE 2,y:PRINT CHR$(254);CHR$(255)
2590 NEXT
2600 FOR y=13 TO 15
2610  READ a1,b1,a2,b2,a3,b3,a4,b4,a5,b5,a6,b6,a7,b7,a8,b8 
2620 SYMBOL 254,a1,a2,a3,a4,a5,a6,a7,a8 
2630 SYMBOL 255,b1,b2,b3,b4,b5,b6,b7,b8
2640 PEN 2:LOCATE 2,y:PRINT CHR$(254);CHR$(255) 
2650 NEXT
2660 SYMBOL 251,0,0,0,0,3,3,3,3
2670 SYMBOL 252,3,3,3,3,&1F,&3F,&73,&E3
2680 SYMBOL 253,&C7,&FE,&7C,0,0,0,0,0
2690 SYMBOL 254,3,3,3,3,3,3,3,3
2700 SYMBOL 255,&1F,&3F,&73,&E3,&C7,&FE,&7C,0
2710 RETURN
2720 DATA 0,&70,0,&88,1,4,2,4
2730 DATA 2,2,2,2,2,2,2,2
2740 DATA 2,2,2,2,2,2,2,2
2750 DATA 2,4,2,8,2,&10,2,&20
2760 DATA 2,&40,1,&80,1,&80,2,&80
2770 DATA 4,&80,&9,&fc,&12,&4,&24,&82
2780 DATA &44,&82,&48,&81,&88,&81,&90,&81
2790 DATA &90,&81,&88,&81,&88,&81,&48,&82
2800 DATA &20,&86,&20,&84,&10,&88,8,&88
2810 DATA 7,&f0,0,&80,0,&80,0,&80
2820 DATA 0,&80,0,&80,0,&80,0,&80
2830 DATA &1f,&80,&3f,&80,&1f,&80,&f,&80
2840 REM bass clef
2850 DATA 7,&80,&18,&e0,&20,&60,&20,&36
2860 DATA &20,&36,&20,&30,&1c,&38,&1c,&38
2870 DATA &1c,&38,8,&30,0,&36,0,&36
2880 DATA 0,&30,0,&70,0,&60,0,&60
2890 DATA 0,&c0,1,&80,3,0,6,0
2900 DATA &c,0,&18,0,&10,0,&20,0
2910 REM spreadsheet
2920 MODE 0:BORDER 13:INK 0,13:INK 1,0:PEN 1:LOCATE 1,12:PRINT "EXAMPLES OF BUSINESS":LOCATE 5,14:PRINT "APPLICATIONS"
2930 T=TIME
2940 IF TIME-T<900 THEN 2940
2950 LOCATE 1,12:PRINT CHR$(18):LOCATE 1,14:PRINT CHR$(18):LOCATE 6,12:BORDER 15:INK 0,15:INK 1,2:PRINT "SPREADSHEET"
2960 T=TIME
2970 IF TIME-t<900 THEN 2970
2980 DIM ctot(6),ltot(18)
2990 MODE 2
3000 c$="January\Febrary\March\April\May\June\"
3010 MOVE 0,380:DRAWR 640,0,1
3020 MOVE 60,0:DRAWR 0,400
3030 FOR x=1 TO 6
3040  cc$=LEFT$(c$,INSTR(c$,"\")-1)
3050  LOCATE 8+X*10-LEN(cc$),1:PRINT cc$
3060  c$=MID$(c$,LEN(cc$)+2)
3070 NEXT x
3080 LOCATE 72,1:PRINT "TOTAL"
3090 C$="UK\USA\Eire\France\Germany\Spain\Belgium\Italy\Holland\Norway\Sweden\Denmark\Canada\Japan\Switz.\Korea\Greece\H. Kong\"
3100 FOR x=1 TO 18
3110  cc$=LEFT$(c$,INSTR(c$,"\")-1)
3120  LOCATE 8-LEN(cc$),x+2:PRINT cc$
3130  c$=MID$(c$,LEN(cc$)+2)
3140 NEXT x
3150 MOVE 0,75:DRAWR 640,0
3160 LOCATE 1,22:PRINT "TOTAL"
3170 t=TIME:RANDOMIZE t
3180 FOR y=1 TO 18
3190  FOR x=1 TO 6
3200  cv=(RND*1000000)/100
3210 REM  ctot(x)=ctot(x)+cv
3220   LOCATE x*10,Y+2:PRINT USING "#####.##";cv
3230  NEXT:NEXT
3240 FOR x= 1 TO 6
3250  RANDOMIZE t:ctot=0
3260  FOR y=1 TO 18
3270  FOR rn=1 TO 6
3280  cv=(RND*1000000)/100 
3290   IF x=rn THEN ctot(x)=ctot(x)+cv:tv=cv
3300  NEXT rn
3310   LOCATE x*10,Y+2
3320   PRINT CHR$(24);USING "#####.##";tv
3330   LOCATE x*10,Y+2:PRINT CHR$(24);USING "#####.##";tv 
3340  NEXT y
3350  LOCATE x*10-1,22:PRINT USING "######.##";ctot(x)
3360 NEXT x
3370 RANDOMIZE t
3380 FOR y=1 TO 18
3390  FOR x= 1 TO 6
3400   cv=(RND*1000000)/100 
3410   LOCATE x*10,Y+2:PRINT CHR$(24);USING "#####.##";cv
3420   LOCATE x*10,Y+2:PRINT CHR$(24);USING "#####.##";cv
3430   ltot(y)=ltot(y)+cv
3440  NEXT x
3450  LOCATE 70,y+2:PRINT USING "######.##";ltot(y)
3460 NEXT y
3470 x=0
3480 FOR y=1 TO 18
3490  IF (y MOD 3)=1 THEN x=x+1:LOCATE x*10-1,22:PRINT CHR$(24);USING "######.##";ctot(x):PRINT CHR$(24);
3500  LOCATE 70,y+2:PRINT CHR$(24); USING "######.##";ltot(y) 
3510  LOCATE 70,y+2:PRINT CHR$(24); USING "######.##";ltot(y) 
3520  gt=gt+ltot(y)
3530 IF (y MOD 3)=0 THEN LOCATE x*10-1,22:PRINT USING "######.##";ctot(x)
3540 NEXT y
3550 LOCATE 70,22:PRINT USING "######.##";gt
3560 T=TIME
3570 IF TIME-T<1200 THEN 3570
3580 REM program to print a bar chart
3590 MODE 0:BORDER 4:INK 0,4:INK 1,26:LOCATE 6,12:PRINT "BAR CHARTS":t=TIME
3600 IF TIME-t<900 THEN 3600
3610 DEG:t60=TAN(60):s30=SIN(30):c30=COS(30)
3620 MODE 1:BORDER 13:INK 0,13:INK 1,17:INK 2,8:INK 3,4:TAG
3630 wdth=35:dpth=20:off=202-INT(dpth*s30/2)
3640 MOVE 62,400:DRAW 62,0,3
3650 FOR y=360 TO 40 STEP -40
3660  MOVE 58,y:DRAW 66,y:MOVE 0,y+6
3670  PRINT USING "###";ABS(y-200)/4*5;
3680 NEXT y
3690 MOVE 58,200:DRAW 640,200
3700 FOR xst=75 TO 600 STEP 45
3710 h1=INT(RND*380)-190
3720 IF h1<=0 THEN 3810
3730 FOR y=0 TO h1 STEP 2
3740  MOVE xst,off+y
3750  DRAWR wdth,0,1
3760  DRAWR dpth*c30,dpth*s30,2
3770 NEXT y
3780 y=y-2:GOSUB 3910
3790 NEXT xst
3800 PLOT 640,0,3:MOVE 380,42:TAGOFF:PRINT CHR$(23);CHR$(3);:TAG:PRINT"Monthly Balance";:MOVE 412,22:PRINT"Of Payments";:TAGOFF:PRINT CHR$(23);CHR$(0);:GOTO 3890
3810 y=-2:GOSUB 3910
3820 FOR y=-2 TO h1 STEP -2
3830 MOVE xst,off+y 
3840  DRAWR wdth,0,1 
3850  DRAWR dpth*C30,dpth*S30,2
3860 NEXT y
3870 MOVE xst,200:DRAW 640,200,3
3880 GOTO 3790
3890 T=TIME
3900 IF TIME-T<1500 THEN 3900 ELSE 3960
3910 FOR y1=y+2 TO y+dpth*s30 STEP 2
3920  MOVE xst+(y1-y)*T60,off+y1    
3930  DRAWR wdth,0,3    
3940 NEXT y1   
3950 RETURN
3960 REM word processor demo
3970 MODE 0:BORDER 21:INK 0,21:INK 1,6:LOCATE 4,12:PRINT "WORD PROCESSING":t=TIME
3980 IF TIME-t<900 THEN 3980
3990 DIM sp(10)
4000 MODE 2:xflag=0
4010 MOVE 640,376:DRAW 8,376,1
4020 MOVE 8,376:DRAW 8,0
4030 t$="Input text":GOSUB 4760
4040 RESTORE 4780:i$=""
4050 FOR y=3 TO 25
4060  GOSUB 4630
4070 LOCATE 3,y:PRINT l$
4080 NEXT y
4090 FOR y= 3 TO 25
4100  GOSUB 4630
4110  LOCATE 45,y:PRINT l$
4120 NEXT y
4130 t$="Justify":GOSUB 4760
4140 RESTORE 4780:i$=""
4150 FOR y=3 TO 25
4160 LOCATE 3,y:GOSUB 4470
4170 NEXT y
4180 FOR y=3 TO 25
4190  LOCATE 45,y:GOSUB 4470
4200 NEXT
4210 t$="Now we will change the word 'operator' for the word 'user'":GOSUB 4760
4220 t=TIME
4230 t1=TIME-t
4240 LOCATE 45,10
4250 IF T1>1000 THEN 4280
4260 IF (t1 MOD 20)<10 THEN PRINT CHR$(24)+"operator"+CHR$(24) ELSE PRINT "operator"
4270 GOTO 4230
4280 t=TIME 
4290 t1=TIME-t
4300 LOCATE 45,10 
4310 IF T1>1000 THEN 4340 
4320 IF (t1 MOD 20)<10 THEN PRINT CHR$(24)+"user"+CHR$(24) ELSE PRINT "user    "
4330 GOTO 4290
4340 i$="":RESTORE 4870
4350 FOR y=10 TO 16
4360 GOSUB 4630
4370 LOCATE 45,y:PRINT l$;SPC(32-LEN(l$))
4380 NEXT y
4390 t$="Re-justify":GOSUB 4760:Xflag=1
4400 i$="":RESTORE 4870
4410 FOR y=10 TO 16
4420 LOCATE 45,y
4430 GOSUB 4470
4440 NEXT
4450 T=TIME
4460 IF TIME-T<300 THEN 4460 ELSE 4920
4470  GOSUB 4630:ns=0
4480 IF INSTR(l$,CHR$(1))<>0 THEN PRINT LEFT$(l$,INSTR(l$,CHR$(1))-1);SPC(33-LEN(l$));:RETURN
4490 IF LEN(l$)=32 THEN PRINT l$:RETURN
4500  FOR x=1 TO LEN(l$) 
4510   IF MID$(l$,x,1)=" " THEN ns=ns+1  
4520  NEXT x      
4530  fillsp=32-LEN(l$)
4540  FOR spfill=1 TO ns:sp(spfill)=fillsp\ns:NEXT 
4550  IF (y MOD 2)=0 THEN FOR spfill=1 TO fillsp-ns*(fillsp\ns):sp(spfill)=sp(spfill)+1: NEXT  
4560  IF (y MOD 2)=1 THEN FOR spfill=ns TO ns-(fillsp-ns*(fillsp\ns))+1 STEP -1:sp(spfill)=sp(spfill)+1: NEXT 
4570  spfill=1  
4580  FOR x=1 TO LEN(l$)  
4590   PRINT MID$(l$,x,1);:IF MID$(l$,x,1)<>" " THEN 4610
4600   PRINT SPACE$(sp(spfill));:spfill=spfill+1 
4610  NEXT x
4620 RETURN
4630 REM get another line of up to 32 chars into l$
4640 l$=""
4650 IF i$="" THEN READ i$
4660 s1=INSTR(i$," ")
4670 IF s1=0 THEN wlen=LEN(i$) ELSE wlen=s1-1
4680 w$=LEFT$(i$,wlen):IF xflag=0 THEN 4700
4690 IF w$="operator" THEN w$="user"
4700 IF LEN(l$)+LEN(w$)>=32 THEN RETURN
4710 IF LEN(l$)>0 THEN l$=l$+" "+w$ ELSE l$=w$
4720 i$=MID$(i$,wlen+2,LEN(i$)-wlen)
4730 IF INSTR(w$,"@")=0 THEN 4650
4740 l$=LEFT$(l$,INSTR(l$,"@")-1)+CHR$(1)+CHR$(13)
4750 RETURN
4760 LOCATE 1,1:PRINT CHR$(18):LOCATE (80-LEN(t$))/2,1:PRINT CHR$(24)+t$+CHR$(24):RETURN
4770 LOCATE 1,1:END
4780 DATA "The term 'Word Processor' is much misused and is regularly use to describe"
4790 DATA "equipment ranging from little more than an electronic typewriter"
4800 DATA "to sophisticated work stations costing more than a medium sized family car.@"
4810 DATA "The essential function of a word processor is to take text input, manipulate it in some way, and then produce a printed copy."
4820 DATA "Normally standard letters and previous versions of documents are stored on some sort of permanent memory"
4830 DATA "device, for example a cassette or floppy disc, and can be recalled for editing or printing.@"
4840 DATA "Better word processors have screens which show the operator exactly how the text will be printed on the paper, with all the correct column breaks."
4850 DATA "This normally requires the ability to display a full 80 characters across the screen.@"
4860 DATA "Changes to the displayed text are normally made with screen editing facilities where the"
4870 DATA "operator simply positions the cursor over the"
4880 DATA "required words and either inserts or deletes as appropriate. A powerful word processor will have special function keys dedicated to this purpose.@"
4890 DATA "By far the most common printer used for letter-quality output is the daisy wheel printer."
4900 DATA "They have all the letters of the alphabet arranged around the outside of a slotted disc which spins to the required"
4910 DATA "position and is then struck by a small hammer.@"
4920 REM Sultan's Maze for the Amstrad
4930 REM Copyright 1984 Gem Software
4940 REM                & C. Hunt
4950 MODE 0:INK 1,18,6:INK 0,6,18:BORDER 18,6:LOCATE 5,12:PRINT "ARCADE GAMES"
4960 T=TIME
4970 I=TIME-T
4980 SPEED INK 25-(I\100),25-(I\100)
4990 IF I<2000 THEN 4970
5000 MODE 0:LOCATE 5,5:PRINT "SULTAN'S MAZE":LOCATE 5,7:PRINT "COPYRIGHT 1984":LOCATE 5,8:PRINT "GEM SOFTWARE"
5010 LOCATE 5,9:PRINT "& C.HUNT"
5020 T=TIME
5030 IF TIME-T<450 THEN 5030
5040 RESTORE 5040:BORDER 4:INK 0,0:SPEED INK 10,10:FOR i=1 TO 15:READ c:INK i,c:NEXT i:DATA 6,2,23,18,24,12,9,26,9,10,11,12,13,14,15
5050 SYMBOL 244,0,0,195,36,28,16,0,0
5060 SYMBOL 245,0,2,1,17,8,4,64,49
5070 SYMBOL 246,16,16,8,8,129,60,255,255
5080 SYMBOL 247,0,64,128,136,16,32,2,140
5090 SYMBOL 248,11,3,7,55,199,7,3,11
5100 SYMBOL 249,255,153,153,255,231,126,0,231
5110 SYMBOL 250,208,192,224,227,236,224,192,208
5120 SYMBOL 251,49,64,4,8,17,1,2,0
5130 SYMBOL 252,255,255,60,129,16,16,8,8
5140 SYMBOL 253,140,2,32,16,136,128,64,0
5150 SYMBOL 254,0,3,15,255,255,15,3,0
5160 SYMBOL 255,192,134,14,252,248,0,128,192
5170 MODE 0:INK 1,0:PAPER 4:CLS:WINDOW 1,20,1,11:PAPER 3:CLS:WINDOW 1,20,1,25:PAPER 4
5180 FOR i=202 TO 270 STEP 2:MOVE 188,i:DRAWR 265,0,6:NEXT i
5190 FOR i=272 TO 278 STEP 2:MOVE 188,i:DRAWR 19,0:MOVER 21,0:DRAWR 19,0:MOVER 147,0:DRAWR 19,0:MOVER 21,0:DRAWR 19,0:NEXT i
5200 FOR i=272 TO 280 STEP 2:MOVE 268,i:DRAWR 107,0:NEXT i
5210 FOR i=282 TO 314 STEP 2:MOVE 276,i:DRAWR 91,0:NEXT i
5220 FOR i=316 TO 320 STEP 2:MOVE 276,i:DRAWR 7,0:MOVER 13,0:DRAWR 7,0:MOVER 13,0:DRAWR 11,0:MOVER 13,0:DRAWR 7,0:MOVER 13,0:DRAWR 7,0:NEXT i
5230 s!=2:RESTORE 5390:i=1:GOSUB 5740
5240 MOVE 100,0:DRAW 300,200:MOVE 340,200:DRAW 540,0
5250 s!=1:x=280:y=230:GOSUB 5900
5260 s!=1.5:x=250:y=220:GOSUB 5900
5270 s!=2.4:x=210:y=205:GOSUB 5900
5280 s!=3.3:x=152:y=180:GOSUB 5900
5290 s!=4.4:x=80:y=140:GOSUB 5900
5300 PAPER 3:PEN 8
5310 LOCATE 2,5:PRINT CHR$(136);STRING$(2,143);CHR$(141);
5320 LOCATE 2,6:PRINT CHR$(139);STRING$(4,143);
5330 LOCATE 4,7:PRINT CHR$(131);
5340 LOCATE 13,4:PRINT CHR$(142);CHR$(135)
5350 LOCATE 18,5:PRINT STRING$(2,140);
5360 LOCATE 17,6:PRINT CHR$(142);STRING$(2,143);CHR$(141);
5370 LOCATE 17,7:PRINT CHR$(139);STRING$(3,143);
5380 LOCATE 18,8:PRINT STRING$(2,131);
5390 DATA 1,1,1,3,-68,0,3,0,40,3,12,0,3,0,-5,3,8,0,3,0,5,3,12,0,3,0,-5,3,8,0,3,0,5,3,12,0,3,0,-5,3,8,0,3,0,10,3,16,0,3,0,-10,3,8,0,3,0,5,3,12,0,3,0,-5,3,8,0,3,0,5,3,12,0,3,0,-5,3,8,0,3,0,5,3,12,0,3,0,-40,3,-68,0
5400 DATA 1,-24,40,3,0,20,3,6,0,3,0,-3,3,4,0,3,0,3,3,6,0,3,0,-3,3,4,0,3,0,3,3,8,0,3,0,-3,3,4,0,3,0,3,3,6,0,3,0,-3,3,4,0,3,0,3,3,6,0,3,0,-20,1,-36,-40,3,0,16,3,12,6,3,12,-6,3,0,-16,1,-4,0,3,0,15,3,-8,4,3,-8,-4,3,0,-15
5410 DATA 1,0,12,3,16,0,1,0,2,3,-16,0,1,4,2,3,8,0,3,0,-5,1,-4,0,3,0,7,1,-4,-2,3,0,-5,1,-46,10,3,2,1,3,4,0,3,0,5,3,2,1,3,2,-1,3,0,-5,3,4,0,3,2,-1,3,-2,-1,3,-4,0,3,0,-5,3,-2,-1,3,-2,1,3,0,5,3,-4,0,3,-2,1
5420 DATA 1,84,0,3,2,1,3,4,0,3,0,5,3,2,1,3,2,-1,3,0,-5,3,4,0,3,2,-1,3,-2,-1,3,-4,0,3,0,-5,3,-2,-1,3,-2,1,3,0,5,3,-4,0,3,-2,1,0,0,0
5430 s!=1:RESTORE 5440:i=8:GOSUB 5740
5440 DATA 1,12,-22,3,8,0,3,-8,10,3,0,-10,1,-16,0,3,-8,0,3,8,10,3,0,-10,1,-4,-8,3,0,-8,3,4,2,3,4,-2,3,4,2,3,4,-2,3,4,2,3,4,-2,3,0,8,3,-4,-2,3,-4,2,3,-4,-2,3,-4,2,3,-4,-2,3,-4,2
5450 DATA 1,-20,-72,3,-8,50,3,-40,40,3,16,4,3,40,-4,3,8,12,3,8,4,3,16,0,3,8,-4,3,8,-12,3,40,4,3,16,-4,3,-40,-40,3,-8,-50,3,-8,8,3,-8,-8,3,-8,8,3,-8,-8,3,-8,8,3,-8,-8,3,-8,8,3,-8,-8,0,0,0
5460 MOVE 8,188:DRAW 8,240,6:MOVE 0,208:DRAW 0,260,7:MOVE 4,210:DRAW 4,256:MOVE 8,210:DRAW 8,262:MOVE 12,208:DRAW 12,256:MOVE 16,210:DRAW 16,250
5470 MOVE 24,196:DRAW 24,214,6:MOVE 20,214:DRAW 20,254,7:MOVE 24,214:DRAW 24,260:MOVE 28,214:DRAW 28,258:MOVE 32,216:DRAW 32,254
5480 MOVE 40,192:DRAW 40,210,6:MOVE 36,212:DRAW 36,252,7:MOVE 40,210:DRAW 36,260:MOVE 40,210:DRAW 40,254:MOVE 44,212:DRAW 44,248:MOVE 48,216:DRAW 48,240
5490 MOVE 64,36:DRAW 572,36,0:MOVE 64,34:DRAW 572,34:MOVE 64,32:DRAW 572,32:MOVE 64,14:DRAW 572,14:MOVE 64,12:DRAW 572,12:MOVE 64,10:DRAW 572,10
5500 MOVE 320,300:DRAW 320,351,1
5510 MOVER 9,0:DRAWR 43,-12,0:DRAWR 0,-4:DRAWR -43,-4:DRAWR 0,20:MOVER 0,-2:DRAWR -4,0:MOVER 0,-16:DRAWR 4,0
5520 MOVER 4,0:DRAWR 0,16,1:MOVER 4,-2:DRAWR 0,-14:MOVER 4,0:DRAWR 0,12:MOVER 4,0:DRAWR 0,-10:MOVER 4,0:DRAWR 0,8:MOVER 4,0:DRAWR 0,-8:MOVER 4,0:DRAWR 0,6:MOVER 4,-2:DRAWR 0,-2:MOVER 4,0:DRAWR 0,2:MOVER 4,-2:DRAWR -1,0:MOVER -9,1:DRAWR -20,2,8
5530 FOR y=222 TO 240:MOVE 556,222:DRAW 639,y,4:NEXT y
5540 MOVE 552,223:DRAWR 23,-13,2:DRAWR 4,-10:DRAWR 20,-8:MOVER -20,8:DRAWR 24,-8:DRAWR 24,-20:MOVER 4,0:DRAWR -24,20:DRAWR 16,-20:DRAWR 16,-8:MOVER 4,0:DRAWR -16,8:MOVER 4,0:DRAWR 12,-8
5550 MOVE 540,220:DRAWR 0,4,7:MOVER 4,-2:DRAWR 0,-2
5560 MOVE 576,214:DRAWR 0,6:MOVER 4,-2:DRAWR 0,-4
5570 MOVE 596,206:DRAWR 0,8:MOVER 4,2:DRAWR 0,-12:MOVER 4,0:DRAWR 0,14:MOVER 4,-4:DRAWR 0,-10:MOVER 4,-2:DRAWR 0,8
5580 MOVER 16,-12:DRAWR 0,12:MOVER 4,4:DRAWR 0,-18:MOVER 4,-4:DRAWR 0,22
5590 PAPER 3:PEN 5:GOSUB 5840
5600 PEN 0:LOCATE 18,3:PRINT CHR$(244):LOCATE 16,4:PRINT CHR$(244):LOCATE 2,2:PRINT CHR$(244):LOCATE 4,10:PRINT CHR$(244)
5610 LOCATE 11,21:PAPER 4:PEN 13:PRINT CHR$(227):LOCATE 13,22:PEN 14:PRINT CHR$(227):LOCATE 8,22:PEN 15:PRINT CHR$(227)
5620 PAPER 0:c=0:LOCATE 3,24:PRINT " Sultan's  Maze "
5630 BORDER 4:FOR i=1 TO 15:READ c:INK i,c:NEXT i:DATA 6,2,23,18,24,12,9,26,9,10,11,12,13,14,15
5640 t=TIME
5650 WHILE TIME<t+1500
5660  FOR i=1 TO 16
5670   PEN 0.5+12*RND:LOCATE 2+i,24:PRINT MID$(" Sultan's  Maze ",i,1);
5680   INK 13,15*RND:INK 14,15*RND:INK 15,15*RND
5690  NEXT i
5700 WEND
5710 PEN 1:GOTO 5990
5720 MODE 1:BORDER 0:INK 0,0:INK 1,6:INK 2,18:PAPER 1:PEN 0
5730 '
5740 MOVE 319,199
5750 READ a,b!,c!:IF a=0 THEN RETURN
5760 b!=b!*s!:c!=c!*s!
5770 ON a GOTO 5780,5790,5800,5810
5780 MOVER b!,c!:GOTO 5750
5790 DRAW b!,c!,i:GOTO 5750
5800 DRAWR b!,c!,i:GOTO 5750
5810 MOVE b!,c!:GOTO 5750
5820 '
5830 'draw sun subroutine
5840 LOCATE 5,1:PRINT CHR$(245);CHR$(246);CHR$(247);
5850 LOCATE 5,2:PRINT CHR$(248);CHR$(249);CHR$(250);
5860 LOCATE 5,3:PRINT CHR$(251);CHR$(252);CHR$(253);
5870 RETURN
5880 '
5890 'draw filled tree
5900 FOR x1=x-8*s! TO x+8*s! STEP 4
5910  MOVE x,y:DRAW x1,y-20*s!,7:DRAW x,y-30*s!
5920 NEXT x1
5930 DRAWR 0,-6
5940 FOR x1=640-x-8*s! TO 640-x+8*s! STEP 4
5950  MOVE 640-x,y:DRAW x1,y-20*s!,7:DRAW 640-x,y-30*s!
5960 NEXT x1
5970 DRAWR 0,-6
5980 RETURN
5990 'home runner runner
6000 CALL 40000
6010 WHILE SQ(1)>127:WEND
6020 CLEAR:ON BREAK GOSUB 6030:GOTO 30
6030 PEN 1:MODE 0:INK 1,4:INK 0,24:BORDER 24
6040 LOCATE 1,12
6050 PRINT:PRINT" NOW EJECT TAPE AND"
6060 PRINT:PRINT"       REFER TO"
6070 PRINT:PRINT"  INSTRUCTION BOOK"
6080 PRINT:PRINT"     FOR LOADING"
6090 PRINT:PRINT"        SIDE 2"
6100 t=TIME:WHILE TIME-t<900:WEND 
6110 CALL 0
6120 RESTORE 6160:MEMORY 39999:adr=40000:MODE 1:LOCATE 14,24:PRINT"Please wait..."
6130 READ a:POKE adr+l,a:l=l+1:IF l=3500 THEN GOTO 6150
6140 GOTO 6130
6150 RETURN
6160 DATA 243,62,0,50,8,167,62,0,17,0,0,221,33,0,0,33,244
6170 DATA 1,1,0,0,33,144,167,17,28,157,115,35,114,251,205,167,188
6180 DATA 17,184,164,237,83,147,164,205,216,165,62,1,205,14,188,62,1
6190 DATA 205,179,188,62,2,205,179,188,62,3,205,179,188,38,7,46,5
6200 DATA 205,62,188,205,103,158,205,213,156,205,240,156,205,228,156,205,254
6210 DATA 156,205,20,157,205,80,157,205,186,157,205,212,157,205,222,162,205
6220 DATA 59,160,205,4,161,205,209,159,205,4,161,205,177,165,205,50,160
6230 DATA 208,42,146,166,43,34,146,166,124,181,200,205,159,165,205,132,164
6240 DATA 205,10,163,205,9,167,210,35,167,195,174,156,201,197,213,229,245
6250 DATA 6,1,72,205,56,188,241,225,209,193,201,197,213,229,245,205,20
6260 DATA 188,241,225,209,193,201,62,23,205,228,187,62,0,6,0,72,205
6270 DATA 50,188,201,62,2,6,6,72,205,50,188,62,15,22,40,30,24
6280 DATA 38,0,46,22,205,68,188,201,62,3,6,4,72,205,50,188,62
6290 DATA 15,6,7,17,0,0,33,47,0,205,51,157,197,6,24,35,16
6300 DATA 253,193,16,244,201,197,213,229,245,1,63,1,205,95,188,241,225
6310 DATA 209,193,201,205,222,187,201,205,144,187,201,229,205,150,187,225,201
6320 DATA 62,2,205,74,157,38,40,46,1,205,128,157,62,72,205,90,187
6330 DATA 46,2,205,128,157,62,79,205,90,187,46,3,205,128,157,62,77
6340 DATA 205,90,187,46,4,205,128,157,62,69,205,90,187,201,197,213,229
6350 DATA 245,205,117,187,241,225,209,193,201,213,229,42,144,167,35,126,34
6360 DATA 144,167,230,31,225,209,201,111,205,140,157,230,3,71,4,205,140
6370 DATA 157,198,4,103,205,128,157,62,32,205,90,187,205,90,187,205,90
6380 DATA 187,16,234,201,62,14,205,90,187,62,32,205,90,187,6,6,62
6390 DATA 5,245,197,205,155,157,193,241,198,3,16,245,201,33,225,157,126
6400 DATA 254,255,200,205,90,187,35,24,246,31,3,24,14,34,15,33,28
6410 DATA 0,0,0,28,1,24,24,28,2,6,6,28,3,7,9,83,67
6420 DATA 79,82,69,9,9,9,72,73,45,83,67,79,82,69,32,32,32
6430 DATA 66,79,78,85,83,32,32,32,67,65,82,68,9,156,157,9,156
6440 DATA 157,13,10,9,9,9,9,79,9,9,9,9,9,9,9,9,9
6450 DATA 79,9,9,9,9,9,9,9,9,79,9,9,9,9,9,9,49
6460 DATA 9,9,9,130,131,9,130,131,15,3,14,0,30,9,9,9,9
6470 DATA 9,9,9,9,9,9,68,9,69,9,77,9,79,9,9,9,77
6480 DATA 9,79,9,68,9,69,255,17,128,0,33,248,167,205,171,187,1
6490 DATA 244,1,17,248,167,33,124,158,237,176,201,0,1,7,7,3,3
6500 DATA 3,7,64,224,192,64,224,192,128,192,30,63,55,7,11,29,56
6510 DATA 48,224,112,176,128,128,192,224,96,0,1,7,7,3,3,7,15
6520 DATA 64,224,192,64,224,192,128,192,29,59,55,7,7,14,28,24,224
6530 DATA 240,176,128,64,224,112,48,0,1,7,7,3,3,3,7,64,224
6540 DATA 192,64,224,192,128,192,15,13,11,7,6,6,6,6,224,240,176
6550 DATA 64,192,192,192,192,2,7,3,2,7,3,1,3,0,128,224,224
6560 DATA 192,192,224,240,7,15,13,1,2,7,14,12,184,220,236,224,224
6570 DATA 112,56,24,0,1,7,7,3,3,3,7,64,224,192,64,224,192
6580 DATA 128,192,15,13,11,7,6,6,6,6,224,240,176,64,192,192,192
6590 DATA 192,2,7,3,2,7,3,1,3,0,128,224,224,192,192,192,224
6600 DATA 7,15,13,2,3,3,3,3,240,176,208,224,96,96,96,96,4
6610 DATA 15,7,5,15,7,3,7,0,128,224,224,192,192,192,224,7,14
6620 DATA 13,2,3,6,7,3,184,216,184,224,96,96,96,96,0,3,15
6630 DATA 15,7,7,7,15,64,224,192,64,224,192,128,192,29,27,29,7
6640 DATA 6,6,6,6,224,112,176,64,192,96,224,192,2,7,3,2,7
6650 DATA 3,1,3,0,128,224,224,192,192,224,240,7,15,13,1,2,7
6660 DATA 14,12,184,220,236,224,224,112,56,24,0,0,0,0,3,15,11
6670 DATA 10,0,0,0,0,192,240,208,80,0,0,0,0,3,15,19,36
6680 DATA 0,0,0,0,192,240,200,36,0,0,0,0,0,0,0,0,0
6690 DATA 0,0,0,0,0,0,0,84,2,110,1,0,237,91,204,159,42
6700 DATA 206,159,205,192,187,33,49,160,126,60,254,9,32,2,62,1,119
6710 DATA 33,13,160,71,35,35,35,35,16,250,126,205,230,160,35,126,205
6720 DATA 230,160,205,242,160,35,126,205,230,160,35,126,205,230,160,62,0
6730 DATA 50,208,159,201,0,0,0,0,156,157,130,131,156,157,158,159,156
6740 DATA 157,150,151,156,157,158,159,156,157,134,135,156,157,158,159,156,157
6750 DATA 150,151,156,157,130,131,4,62,79,205,30,187,55,200,63,201,17
6760 DATA 100,0,237,83,204,159,33,78,0,34,206,159,205,192,187,201,1
6770 DATA 16,39,120,177,11,32,251,201,237,91,204,159,42,206,159,205,192
6780 DATA 187,33,49,160,126,60,254,9,32,2,62,1,119,33,145,160,71
6790 DATA 35,35,35,35,16,250,126,205,230,160,35,126,205,230,160,205,242
6800 DATA 160,35,126,205,230,160,35,126,205,230,160,62,255,50,208,159,201
6810 DATA 0,0,0,0,152,153,130,131,152,153,154,155,152,153,150,151,152
6820 DATA 153,154,155,152,153,134,135,152,153,154,155,152,153,150,151,152,153
6830 DATA 130,131,62,71,205,30,187,196,47,161,62,71,205,30,187,196,85
6840 DATA 160,62,63,205,30,187,196,15,161,62,63,205,30,187,196,209,159
6850 DATA 62,47,205,30,187,245,196,79,161,220,185,161,241,204,185,161,201
6860 DATA 197,213,229,245,205,252,187,241,225,209,193,201,197,213,229,245,17
6870 DATA 225,255,33,240,255,205,195,187,241,225,209,193,201,62,1,205,222
6880 DATA 187,62,0,205,228,187,201,237,91,204,159,122,254,2,32,11,123
6890 DATA 254,96,32,6,62,1,50,8,167,201,42,206,159,19,19,19,19
6900 DATA 237,83,204,159,201,237,91,204,159,122,254,0,32,11,123,254,0
6910 DATA 32,6,62,0,50,8,167,201,42,206,159,27,27,27,27,237,83
6920 DATA 204,159,201,58,116,162,254,255,32,2,55,201,205,67,162,192,237
6930 DATA 91,204,159,245,42,206,159,35,35,35,35,34,206,159,205,192,187
6940 DATA 58,208,159,254,255,204,85,160,58,208,159,254,0,204,209,159,42
6950 DATA 206,159,1,32,0,55,63,237,66,237,91,204,159,205,192,187,62
6960 DATA 0,205,222,187,17,32,0,33,0,0,205,249,187,42,206,159,1
6970 DATA 34,0,55,63,237,66,237,91,204,159,205,192,187,17,32,0,33
6980 DATA 0,0,205,249,187,241,201,42,206,159,1,32,0,55,63,237,66
6990 DATA 237,91,204,159,229,33,30,0,25,235,225,205,240,187,254,0,32
7000 DATA 21,42,206,159,1,32,0,55,63,237,66,237,91,204,159,205,240
7010 DATA 187,254,0,40,6,62,0,50,116,162,201,237,91,204,159,42,206
7020 DATA 159,43,43,43,43,34,206,159,205,192,187,58,208,159,254,255,204
7030 DATA 85,160,58,208,159,254,0,204,209,159,42,206,159,35,35,237,91
7040 DATA 204,159,205,192,187,62,0,205,222,187,17,32,0,33,0,0,205
7050 DATA 249,187,42,206,159,35,35,35,35,237,91,204,159,205,192,187,17
7060 DATA 32,0,33,0,0,205,249,187,201,237,91,204,159,33,30,0,25
7070 DATA 235,42,206,159,35,35,35,35,205,240,187,254,0,32,17,237,91
7080 DATA 204,159,42,206,159,35,35,35,35,205,240,187,254,0,200,245,33
7090 DATA 116,162,62,255,119,241,201,1,2,33,117,162,126,60,254,3,32
7100 DATA 2,62,1,119,33,148,162,71,35,35,16,252,126,205,230,160,35
7110 DATA 126,205,230,160,201,0,0,164,165,166,167,136,1,207,0,0,168
7120 DATA 0,75,0,0,200,0,111,0,0,232,0,99,0,0,8,1,159
7130 DATA 0,0,96,1,95,1,1,64,1,95,1,1,32,1,95,1,1
7140 DATA 213,229,42,144,167,35,126,34,144,167,225,209,201,213,229,42,144
7150 DATA 167,35,126,34,144,167,230,1,225,209,201,33,154,162,6,8,197
7160 DATA 203,16,203,16,203,16,203,16,203,16,203,135,203,143,120,119,35
7170 DATA 62,1,119,35,62,95,119,35,62,1,119,35,205,207,162,119,35
7180 DATA 193,16,218,201,221,33,154,162,6,5,221,94,0,221,86,1,205
7190 DATA 75,163,221,110,2,221,102,3,205,112,163,27,27,27,27,221,126
7200 DATA 4,254,1,32,8,19,19,19,19,19,19,19,19,221,115,0,221
7210 DATA 114,1,197,205,192,187,205,118,162,193,17,5,0,221,25,16,198
7220 DATA 201,122,254,0,32,9,123,254,0,40,18,254,2,40,14,122,254
7230 DATA 2,192,123,254,79,40,5,254,80,40,1,201,221,126,4,238,1
7240 DATA 221,119,4,201,229,213,197,1,16,0,237,66,229,213,205,240,187
7250 DATA 209,225,254,0,194,13,164,229,1,32,0,235,9,235,225,205,240
7260 DATA 187,254,0,32,122,193,209,225,43,43,43,43,221,116,3,221,117
7270 DATA 2,205,149,164,229,213,197,62,6,167,1,66,1,229,55,237,66
7280 DATA 225,40,49,1,18,1,229,237,66,225,40,40,1,226,0,229,237
7290 DATA 66,225,40,31,1,178,0,229,237,66,225,40,22,1,130,0,229
7300 DATA 237,66,225,40,13,1,82,0,229,237,66,225,40,4,193,209,225
7310 DATA 201,221,102,3,221,110,2,55,63,203,28,203,29,1,6,0,9
7320 DATA 62,15,17,0,0,205,51,157,221,102,3,221,110,2,1,11,0
7330 DATA 9,205,72,164,193,209,225,201,193,209,225,221,126,2,254,63,192
7340 DATA 205,122,164,62,32,205,230,160,205,230,160,38,1,46,95,221,117
7350 DATA 2,221,116,3,205,194,162,95,205,207,162,87,229,197,1,16,0
7360 DATA 235,9,235,203,131,203,139,221,115,0,221,114,1,193,225,201,197
7370 DATA 213,229,205,140,157,230,3,71,4,205,207,162,103,205,194,162,111
7380 DATA 17,50,0,25,235,225,229,197,205,192,187,205,4,161,62,32,205
7390 DATA 230,160,205,230,160,205,230,160,193,16,220,225,209,193,201,229,213
7400 DATA 197,205,192,187,193,209,225,201,62,3,205,222,187,201,1,0,0
7410 DATA 95,0,0,10,2,0,48,165,197,213,221,229,229,33,138,164,205
7420 DATA 170,188,225,221,225,209,193,201,2,0,0,0,0,0,13,8,0
7430 DATA 4,0,0,0,0,0,12,8,0,222,1,12,0,102,1,12,0
7440 DATA 28,1,12,0,102,1,16,0,0,0,1,0,222,1,12,0,102
7450 DATA 1,12,0,28,1,12,0,102,1,16,0,0,0,1,0,63,1
7460 DATA 5,0,28,1,5,0,63,1,5,0,123,1,15,0,0,0,1
7470 DATA 0,102,1,5,0,28,1,5,0,102,1,5,0,222,1,20,0
7480 DATA 0,0,2,0,222,1,12,0,102,1,12,0,28,1,12,0,102
7490 DATA 1,16,0,0,0,1,0,222,1,12,0,102,1,12,0,28,1
7500 DATA 12,0,102,1,16,0,0,0,1,0,63,1,5,0,28,1,5
7510 DATA 0,63,1,5,0,123,1,10,0,222,1,5,0,102,1,20,0
7520 DATA 102,1,20,0,0,0,30,0,229,213,197,245,221,229,42,147,164
7530 DATA 94,35,86,237,83,169,164,55,63,203,19,203,18,35,237,83,178
7540 DATA 164,94,62,7,131,95,35,86,35,237,83,173,164,237,83,182,164
7550 DATA 229,33,166,164,205,170,188,33,175,164,205,170,188,225,229,1,79
7560 DATA 165,237,66,225,32,3,33,184,164,34,147,164,221,225,241,193,209
7570 DATA 225,201,197,213,229,62,2,205,173,188,230,7,225,209,193,200,205
7580 DATA 80,165,201,58,8,167,254,0,32,16,205,148,166,205,148,166,205
7590 DATA 148,166,205,15,161,205,209,159,201,205,148,166,205,148,166,205,148
7600 DATA 166,205,47,161,205,85,160,201,33,246,165,126,167,254,255,40,6
7610 DATA 205,90,187,35,24,244,6,6,197,1,254,255,120,177,11,32,251
7620 DATA 193,16,244,201,14,0,4,0,6,12,10,10,10,10,29,0,0
7630 DATA 28,0,0,0,28,1,15,15,28,2,7,7,28,3,21,0,28
7640 DATA 4,3,1,28,5,10,10,25,254,126,129,189,161,161,189,129,126
7650 DATA 9,9,9,9,9,9,15,1,9,65,77,83,79,70,84,13,10
7660 DATA 10,9,9,9,9,9,15,2,9,80,82,69,83,69,78,84,83
7670 DATA 13,10,10,10,9,9,9,15,3,9,72,79,77,69,32,32,82
7680 DATA 85,78,78,69,82,13,10,10,10,10,10,10,10,10,10,13,10
7690 DATA 15,4,9,66,82,73,84,65,78,78,73,65,32,83,79,70,84
7700 DATA 87,65,82,69,15,5,13,10,10,10,9,9,9,9,9,9,254
7710 DATA 9,9,49,57,56,52,255,8,97,229,213,42,206,159,237,91,204
7720 DATA 159,205,192,187,17,0,0,33,16,0,205,243,187,254,0,32,88
7730 DATA 17,32,0,33,0,0,205,243,187,254,0,32,75,42,206,159,35
7740 DATA 35,35,35,34,206,159,237,91,204,159,58,8,167,254,1,40,5
7750 DATA 205,209,159,24,3,205,85,160,17,0,0,33,240,255,205,195,187
7760 DATA 62,0,205,222,187,17,224,255,33,0,0,205,249,187,17,0,0
7770 DATA 33,254,255,205,195,187,17,32,0,33,0,0,205,249,187,62,1
7780 DATA 205,222,187,209,225,201,0,42,204,159,1,84,2,55,63,237,66
7790 DATA 55,192,42,206,159,1,110,1,55,63,237,66,55,192,63,201,205
7800 DATA 167,188,33,92,167,6,13,94,35,86,35,237,83,86,167,94,35
7810 DATA 86,35,237,83,90,167,229,33,83,167,197,205,170,188,62,1,205
7820 DATA 173,188,230,7,254,0,40,245,193,225,16,217,201,1,0,0,222
7830 DATA 1,0,13,70,0,222,1,40,0,170,1,40,0,123,1,70,0
7840 DATA 102,1,40,0,28,1,50,0,63,1,70,0,123,1,50,0,63
7850 DATA 1,50,0,102,1,70,0,123,1,30,0,102,1,50,0,170,1
7860 DATA 50,0,222,1,70,0,197,157,90,44,70,53,13,252,38,67,65
7870 DATA 76,76,9,80,82,77,65,78,13,6,39,74,82,9,70,54,13
7880 DATA 16,39,70,53,58,67,65,76,76,9,80,76,77,65,78,13,26
7890 DATA 39,70,54,58,76,68,9,68,69,44,48,13,36,39,76,68,9
7900 DATA 72,76,44,45,49,54,13,46,39,67,65,76,76,9,35,66,66
7910 DATA 67,51,13,56,39,76,68,9,65,44,48,13,66,39,67,65,76
7920 DATA 76,9,35,66,66,68,69,13,0,1,7,7,3,3,3,7,64
7930 DATA 224,192,64,224,192,128,192,30,63,55,7,11,29,56,48,224,112
7940 DATA 176,128,128,192,224,96,0,1,7,7,3,3,7,15,64,224,192
7950 DATA 64,224,192,128,192,29,59,55,7,7,14,28,24,224,240,176,128
7960 DATA 64,224,112,48,0,1,7,7,3,3,3,7,64,224,192,64,224
7970 DATA 192,128,192,15,13,11,7,6,6,6,6,224,240,176,64,192,192
7980 DATA 192,192,2,7,3,2,7,3,1,3,0,128,224,224,192,192,224
7990 DATA 240,7,15,13,1,2,7,14,12,184,220,236,224,224,112,56,24
8000 DATA 0,1,7,7,3,3,3,7,64,224,192,64,224,192,128,192,15
8010 DATA 13,11,7,6,6,6,6,224,240,176,64,192,192,192,192,2,7
8020 DATA 3,2,7,3,1,3,0,128,224,224,192,192,192,224,7,15,13
8030 DATA 2,3,3,3,3,240,176,208,224,96,96,96,96,4,15,7,5
8040 DATA 15,7,3,7,0,128,224,224,192,192,192,224,7,14,13,2,3
8050 DATA 6,7,3,184,216,184,224,96,96,96,96,0,3,15,15,7,7
8060 DATA 7,15,64,224,192,64,224,192,128,192,29,27,29,7,6,6,6
8070 DATA 6,224,112,176,64,192,96,224,192,2,7,3,2,7,3,1,3
8080 DATA 0,128,224,224,192,192,224,240,7,15,13,1,2,7,14,12,184
8090 DATA 220,236,224,224,112,56,24,0,0,0,0,3,15,11,10,0,0
8100 DATA 0,0,192,240,208,80,0,0,0,0,3,15,19,36,0,0,0
8110 DATA 0,192,240,200,36,0,0,0,0,0,0,0,0,0,0,0,0
8120 DATA 0,0,0,0,84,2,110,1,0,237,91,204,159,42,206,159,205
8130 DATA 192,187,33,49,160,126,60,254,9,32,2,62,1,119,33,13,160
8140 DATA 71,35,35,35,35,16,250,126,205,230,160,35,126,205,230,160,205
8150 DATA 242,160,35,126,205,230,160,35,126,205,230,160,62,0,50,208,159
8160 DATA 201,0,0,0,0,156,157,130,131,156,157,158,159,156,157,150,151
8170 DATA 156,157,158,159,156,157,134,135,156,157,158,159,156,157,150,151,156
8180 DATA 157,130,131,5,62,79,205,30,187,55,200,63,201,17,100,0,237
8190 DATA 83,204,159,33,78,0,34,206,159,205,192,187,201,1,16,39,120
8200 DATA 177,11,32,251,201,237,91,204,159,42,206,159,205,192,187,33,49
8210 DATA 160,126,60,254,9,32,2,62,1,119,33,145,160,71,35
                                                                                                                               W 347.87,102.67197
120 MOVE 223.44,127.79199:DRAW 223.04001,94.83197:MOVE 236.97,124.29599:DRAW 236.77,89.0:MOVE 251.97,122.79999:DRAW 251.54001,85.84:MOVE 265.5,121.96799:DRAW 265.28003,84.504:MOVE 280.68,